# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
# More info on Python, GitHub Actions, and Azure App Service: https://aka.ms/python-webapps-actions

name: Build and deploy Python app to Azure Web App - futuramaapi

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-cache --without dev --without test

      - name: Create requirements.txt for Azure
        run: poetry export -f requirements.txt --output requirements.txt --without-hashes --without dev --without test

      - name: Create startup script
        run: |
          cat > startup.sh << 'EOF'
          #!/bin/bash
          echo "Starting Futurama API deployment..."
          
          # Install dependencies if not already installed
          if [ ! -d "venv" ]; then
              python -m venv venv
          fi
          source venv/bin/activate
          
          # Install dependencies
          pip install -r requirements.txt
          
          # Run migrations (only if database is available)
          if [ "$DATABASE_URL" != "" ]; then
              echo "Running database migrations..."
              python -m alembic upgrade head || echo "Migration failed, continuing..."
          else
              echo "No DATABASE_URL set, skipping migrations"
          fi
          
          # Start the application
          echo "Starting application..."
          python -m futuramaapi -b :8000
          EOF
          chmod +x startup.sh

      - name: Create web.config for Azure
        run: |
          cat > web.config << 'EOF'
          <?xml version="1.0" encoding="utf-8"?>
          <configuration>
            <system.webServer>
              <handlers>
                <add name="PythonHandler" path="*" verb="*" modules="httpPlatformHandler" resourceType="Unspecified"/>
              </handlers>
              <httpPlatform processPath="D:\home\site\wwwroot\startup.sh"
                            arguments=""
                            stdoutLogEnabled="true"
                            stdoutLogFile="D:\home\LogFiles\python.log"
                            startupTimeLimit="60"
                            startupRetryCount="3">
                <environmentVariables>
                  <environmentVariable name="PORT" value="8000" />
                </environmentVariables>
              </httpPlatform>
            </system.webServer>
          </configuration>
          EOF

      # Optional: Add step to run tests here
      # - name: Run tests
      #   run: |
      #     poetry run python -m pytest

      - name: Zip artifact for deployment
        run: |
          # Exclude unnecessary files and directories
          zip -r release.zip . \
            -x "*.git*" \
            -x "*__pycache__*" \
            -x "*.pyc" \
            -x "*tests*" \
            -x "*.pytest_cache*" \
            -x "*venv*" \
            -x "*.venv*" \
            -x "*node_modules*" \
            -x "*.env" \
            -x "*coverage*"

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'futuramaapi'
          slot-name: 'Production'
